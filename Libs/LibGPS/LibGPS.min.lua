local a="LibGPS2"local b=_G.LibStub;local c=b:NewLibrary(a,16)if not c then return end;local d=b("LibMapPing",true)if not d then error(string.format("[%s] Cannot load without LibMapPing",a))end;local e=a.."DummyPin"local f=a.."_Finalize"c.LIB_EVENT_STATE_CHANGED="OnLibGPS2MeasurementChanged"local g="Warning"local h="Notice"local i="Debug"local j=0.085;local k=0.915;local l=1;local m=c.rootMaps or{}c.rootMaps=m;c.mapMeasurements=c.mapMeasurements or{}c.suppressCount=c.suppressCount or 0;c.mapStack=c.mapStack or{}local n=c.mapMeasurements;local o=c.mapStack;local p=_G.MAP_PIN_TYPE_PLAYER_WAYPOINT;local q=_G.MAP_TYPE_LOCATION_CENTERED;local r=_G.SET_MAP_RESULT_MAP_CHANGED;local s=_G.SET_MAP_RESULT_FAILED;local t=_G.SET_MAP_RESULT_MAP_FAILED;local u=_G.SET_MAP_RESULT_CURRENT_MAP_UNCHANGED;local v=_G.SetMapToPlayerLocation;local w=_G.SetMapToMapListIndex;local x=_G.SetMapFloor;local y,z,A=0,0,nil;local B=_G.GetCurrentMapZoneIndex;local C=_G.GetMapTileTexture;local D=_G.GetCurrentMapIndex;local E=_G.GetMapType;local F=_G.WouldProcessMapClick;local G=_G.ProcessMapClick;local H=false;local I=nil;local J=nil;local K=nil;local L=nil;local M={}local N=_G.DoesUnitExist;local O=false;local P=_G.SLASH_COMMANDS;local Q=_G.CALLBACK_MANAGER;local R=_G.EVENT_MANAGER;local S=_G.df;local T=_G.zo_strjoin;P["/libgpsdebug"]=function(U)c.debugMode=tonumber(U)==1;S("[%s] debug mode %s",a,c.debugMode and"enabled"or"disabled")end;local function V(W,X,...)if not c.debugMode then return end;S("[%s] %s: %s",a,W,T(" ",X,...))end;local function Y()local Z;local function _()Z='a'+1 end;local function a0(a1)Z=string.match(a1,"'GetAddon'.+user:/AddOns/(.-:.-):")end;xpcall(_,a0)return Z end;local function a2()R:UnregisterForUpdate(f)while c.suppressCount>0 do d:UnsuppressPing(p)c.suppressCount=c.suppressCount-1 end;if H then V(i,"Update waypoint pin",d:GetMapPing(p))d:RefreshMapPin(p)H=false end;O=false;Q:FireCallbacks(c.LIB_EVENT_STATE_CHANGED,O)end;local function a3(a4,a5,a6,a7,a8)if not a8 or a4~=p or not O then return end;R:UnregisterForUpdate(f)R:RegisterForUpdate(f,0,a2)end;local function a9()local aa=_G.GetMapPlayerPosition;return aa("player")end;local function ab()return d:GetMapPing(p)end;local function ac(a6,a7)c.suppressCount=c.suppressCount+1;d:SuppressPing(p)d:SetMapPing(p,q,a6,a7)end;local function ad(a6,a7)d:SetMapPing(p,q,a6,a7)end;local function ae()d:RemoveMapPing(p)end;local function af()local ag,ah=a9()local ai,aj=ab()return ag,ah,ai,aj end;local function ak(al)return n[al or C()]~=nil end;local function am()if I(l)~=s then local an={scaleX=1,scaleY=1,offsetX=0,offsetY=0,mapIndex=l,zoneIndex=B()}n[C()]=an;m[l]=an;return true end;return false end;local function ao(al,ap,aq)local ar,as=j,j;if ap<0.5 then ar=k end;if aq<0.5 then as=k end;ac(ar,as)local at={}table.insert(at,{mapId=al,pX=ap,pY=aq,wpX=ar,wpY=as})local ag,ah,ai,aj;local au=_G.MAP_CONTENT_DUNGEON;local av=_G.MapZoomOut;local aw=_G.MAPTYPE_ZONE;local ax=_G.GetMapContentType;while not(E()==aw and ax()~=au)do if av()~=r then break end;ag,ah,ai,aj=af()table.insert(at,{mapId=C(),pX=ag,pY=ah,wpX=ai,wpY=aj})end;local ay=D()or l;local az=B()if I(l)==s then V(h,"Could not switch to world map")return end;ag,ah,ai,aj=af()local aA,aB,aC,aD;for aE,aF in ipairs(at)do if n[aF.mapId]then break end;V(i,"Store map measurement for",aF.mapId:sub(10,-7))aA=(ai-ag)/(aF.wpX-aF.pX)aB=(aj-ah)/(aF.wpY-aF.pY)aC=ag-aF.pX*aA;aD=ah-aF.pY*aB;if math.abs(aA-aB)>1e-3 then V(g,"Current map measurement might be wrong",aF.mapId:sub(10,-7),ay,aF.pX,aF.pY,aF.wpX,aF.wpY,ag,ah,ai,aj,aC,aD,aA,aB)end;n[aF.mapId]={scaleX=aA,scaleY=aB,offsetX=aC,offsetY=aD,mapIndex=ay,zoneIndex=az}end;return ay end;local function aG()y,z=ab()A=C()end;local function aH()y,z=0,0,nil end;local function aI(aJ)I(aJ)local aK=C()if not ak(aK)then local ay=ao(aK,a9())if ay~=aJ then local aL=_G.GetMapInfo(aJ)aL=_G.zo_strformat("<<C:1>>",aL)V(g,"CalculateMeasurements returned different index while measuring ",aL," map. expected:",aJ,"actual:",ay)if not ak(aK)then V(g,"Failed to measure ",aL," map.")return end end end;return n[aK]end;local function aM()if not A then V(i,"Called RestoreCurrentWaypoint without calling StoreCurrentWaypoint.")return end;local aN=false;if y~=0 or z~=0 then local aO=n[A]local a6=y*aO.scaleX+aO.offsetX;local a7=z*aO.scaleY+aO.offsetY;for aP,aO in pairs(m)do if not aO then aO=aI(aP)m[aP]=aO end;if aO then if a6>aO.offsetX and a6<aO.offsetX+aO.scaleX and a7>aO.offsetY and a7<aO.offsetY+aO.scaleY then if I(aP)~=s then a6=(a6-aO.offsetX)/aO.scaleX;a7=(a7-aO.offsetY)/aO.scaleY;ad(a6,a7)aN=true;break end end end end;if not aN then V(i,"Cannot reset waypoint because it was outside of our reach")end end;if aN then V(i,"Waypoint was restored, request pin update")H=true else ae()end;aH()end;local function aQ()local aR=_G.ZO_WorldMap_GetPanAndZoom;local aS=_G.ZO_WorldMap_GetPinManager;local aT=_G.ZO_WorldMap_AddCustomPin;local aU=_G.ZO_WorldMap_SetCustomPinEnabled;c.panAndZoom=aR()c.mapPinManager=aS()if _G[e]then return end;aT(e,function(aV)end,nil,{level=0,size=0,texture=""})aU(_G[e],false)end;local function aW(aX)local aY=_G[aX]M[aX]=aY;local function aZ(...)local a_=aY(...)if a_~=t and not ak()then V(i,aX)local b0,b1=c:CalculateMapMeasurements(false)if b1~=u then a_=b1 end;aY(...)end;return a_ end;_G[aX]=aZ end;local function b2()J=v;M["SetMapToPlayerLocation"]=J;local function b3(...)if not N("player")then return t end;local a_=J(...)if a_~=t and not ak()then V(i,"SetMapToPlayerLocation")local b0,b1=c:CalculateMapMeasurements(false)if b1~=u then a_=b1 end;J(...)end;return a_ end;v=b3 end;local function b4()I=w;M["SetMapToMapListIndex"]=I;local function b5(ay)local a_=I(ay)if a_~=t and not ak()then V(i,"SetMapToMapListIndex")local b0,b1=c:CalculateMapMeasurements(false)if b1~=u then a_=b1 end;I(ay)end;return a_ end;w=b5 end;local function b6()L=G;M["ProcessMapClick"]=L;local function b7(...)local a_=L(...)if a_~=t and not ak()then V(i,"ProcessMapClick")local b0,b1=c:CalculateMapMeasurements(true)if b1~=u then a_=b1 end end;return a_ end;G=b7 end;local function b8()K=x;M["SetMapFloor"]=K;local function b9(...)local a_=K(...)if a_~=t and not ak()then V(i,"SetMapFloor")local b0,b1=c:CalculateMapMeasurements(true)if b1~=u then a_=b1 end;K(...)end;return a_ end;x=b9 end;local function ba()local bb=_G.EVENT_PLAYER_DEACTIVATED;local bc=_G.EVENT_PLAYER_ACTIVATED;local bd=_G.EVENT_MAP_PING;R:UnregisterForEvent("LibGPS2_SaveWaypoint",bb)R:UnregisterForEvent("LibGPS2_RestoreWaypoint",bc)R:UnregisterForEvent(a.."_Init",bc)R:UnregisterForEvent(a.."_UnmuteMapPing",bd)if c.Unload then c:Unload()if c.suppressCount>0 then local be=_G.zo_callLater;if c.debugMode then be(function()V(g,"There is a measure in progress before loading is completed.")end,2000)end;a2()end end;function c:Unload()for aX,bf in pairs(M)do _G[aX]=bf end;d:UnregisterCallback("AfterPingAdded",a3)d:UnregisterCallback("AfterPingRemoved",a3)m,n,o=nil,nil,nil end;aQ()aW("SetMapToQuestCondition")aW("SetMapToQuestStepEnding")aW("SetMapToQuestZone")b2()b4()b6()b8()am()local function bg(bh)local ay=_G.GetMapIndexByZoneId(bh)if ay then m[ay]=false end end;bg(347)bg(980)bg(1027)v()d:RegisterCallback("AfterPingAdded",a3)d:RegisterCallback("AfterPingRemoved",a3)end;function c:IsReady()return N("player")end;function c:IsMeasuring()return O end;function c:ClearMapMeasurements()n={}end;function c:ClearCurrentMapMeasurements()local al=C()n[al]=nil end;function c:GetCurrentMapMeasurements()local al=C()if not n[al]then c:CalculateMapMeasurements()end;return n[al]end;function c:GetCurrentMapParentZoneIndices()local aO=c:GetCurrentMapMeasurements()local ay=aO.mapIndex;if not aO.zoneIndex then c:PushCurrentMap()w(ay)aO.zoneIndex=B()c:PopCurrentMap()end;local az=aO.zoneIndex;return ay,az end;function c:CalculateMapMeasurements(bi)local bj=_G.MAPTYPE_COSMIC;if E()==bj then return false,u end;local al=C()if n[al]or al==""then return false end;if c.debugMode then V("Called from",Y(),"for",al)end;local ap,aq=a9()if ap==0 and aq==0 then return false,u end;bi=bi~=false;O=true;Q:FireCallbacks(c.LIB_EVENT_STATE_CHANGED,O)if bi then c:PushCurrentMap()end;local bk=d:HasMapPing(p)if bk then aG()end;local ay=ao(al,ap,aq)if bk then aM()else ae()end;if bi then local a_=c:PopCurrentMap()return true,a_ end;return true,al==C()and u or r end;function c:LocalToGlobal(a6,a7)local aO=c:GetCurrentMapMeasurements()if aO then a6=a6*aO.scaleX+aO.offsetX;a7=a7*aO.scaleY+aO.offsetY;return a6,a7,aO.mapIndex end end;function c:GlobalToLocal(a6,a7)local aO=c:GetCurrentMapMeasurements()if aO then a6=(a6-aO.offsetX)/aO.scaleX;a7=(a7-aO.offsetY)/aO.scaleY;return a6,a7 end end;function c:ZoneToGlobal(ay,a6,a7)c:GetCurrentMapMeasurements()w(ay)a6,a7,ay=c:LocalToGlobal(a6,a7)return a6,a7,ay end;function c:PanToMapPosition(a6,a7)if not self.mapPinManager then return end;local bl=self.mapPinManager;local bm=bl:CreatePin(_G[e],"libgpsdummy",a6,a7)self.panAndZoom:PanToPin(bm)bl:RemovePins(e)end;local function bn()return true end;local function bo()return r end;local bp={FireCallbacks=function()end}function c:SetPlayerChoseCurrentMap()local bq=_G.ZO_WorldMap_IsMapChangingAllowed;local br=_G.ZO_WorldMap_IsMapChangingAllowed;br=bn;local bs=w;w=bo;local bt=Q;Q=bp;_G.ZO_WorldMap_SetMapByIndex()br=bq;w=bs;Q=bt end;function c:SetMapToRootMap(a6,a7)local a_=s;for aP,aO in pairs(m)do if not aO then aO=aI(aP)m[aP]=aO;a_=r end;if aO then if a6>aO.offsetX and a6<aO.offsetX+aO.scaleX and a7>aO.offsetY and a7<aO.offsetY+aO.scaleY then if I(aP)~=s then return r end end end end;return a_ end;function c:MapZoomInMax(a6,a7)local a_=c:SetMapToRootMap(a6,a7)if a_~=s then local ap,aq=c:GlobalToLocal(a6,a7)while F(ap,aq)do a_=L(ap,aq)if a_==s then break end;ap,aq=c:GlobalToLocal(a6,a7)end end;return a_ end;local bu,bv;local bw=_G.GetAPIVersion;if bw()>=100025 then function bu(bx)return c.panAndZoom:SetCurrentNormalizedZoom(bx)end;function bv()return c.panAndZoom:GetCurrentNormalizedZoom()end else function bv()return c.panAndZoom:GetCurrentZoom()end;function bu(bx)return c.panAndZoom:SetCurrentZoom(bx)end end;local function by()local bz,bA=_G.ZO_WorldMapContainer:GetCenter()local bB,bC=_G.ZO_WorldMapScroll:GetCenter()return bz-bB,bA-bC end;function c:PushCurrentMap()local bD,bE,bF,bG,bH,bx,aC,aD;bH=D()bD=_G.DoesCurrentMapMatchMapForPlayerLocation()bE=C()bF,bG=_G.GetMapFloorInfo()bx=bv()aC,aD=by()o[#o+1]={bD,bE,bF,bG,bH,bx,aC,aD}end;function c:PopCurrentMap()local a_=s;local bI=table.remove(o,#o)if not bI then V(i,"PopCurrentMap failed. No data on map stack.")return a_ end;local bD,bE,bF,bG,bH,bx,aC,aD=unpack(bI)local bJ=C()if bJ~=bE then if bD then a_=J()elseif bH~=nil and bH>0 then a_=I(bH)else local bK=n[bE]if not bK then V(i,string.format("No measurement for \"%s\". Returning to player location.",bE))return J()end;if bK.mapIndex==l then a_=I(l)if a_==s then return a_ end;local a6=bK.offsetX+bK.scaleX/2;local a7=bK.offsetY+bK.scaleY/2;if not F(a6,a7)then V(i,string.format("Cannot process click at %s/%s on map \"%s\" in order to get to \"%s\". Returning to player location instead.",tostring(a6),tostring(a7),C(),bE))return J()end;a_=L(a6,a7)if a_==s then return a_ end else a_=I(bK.mapIndex)if a_==s then return a_ end end;bJ=C()if bJ~=bE then local a6=bK.offsetX+bK.scaleX/2;local a7=bK.offsetY+bK.scaleY/2;local bL=n[bJ]if not bL then V(i,string.format("No measurement for \"%s\". Returning to player location.",bJ))return J()end;a6=(a6-bL.offsetX)/bL.scaleX;a7=(a7-bL.offsetY)/bL.scaleY;if not F(a6,a7)then V(i,string.format("Cannot process click at %s/%s on map \"%s\" in order to get to \"%s\". Returning to player location instead.",tostring(a6),tostring(a7),C(),bE))return J()end;a_=L(a6,a7)if a_==s then return a_ end end;if bG>0 then a_=K(bF)end;if a_~=s then bu(bx)c.panAndZoom:SetCurrentOffset(aC,aD)end end else a_=u end;return a_ end;ba()