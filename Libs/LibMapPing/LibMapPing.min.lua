local a="LibMapPing"local b=_G.LibStub:NewLibrary(a,7)local c=_G.EVENT_MANAGER;if not b then return end;local function d(e,...)_G.df("[%s] %s",a,e:format(...))end;local f=2.15;local g=39;local h=0.512;local i=100;local j=10;local k=3;local l=10;local m=_G.ZO_Object;local n=m:Subclass()local o=_G.GetMapRallyPoint;local p=_G.PING_EVENT_ADDED;local q=_G.PING_EVENT_REMOVED;local r=_G.EVENT_MAP_PING;local s=_G.PingMap;local t=_G.etMapPing;local u=_G.GetGameTimeMilliseconds;local v=_G.PlaySound;local w=_G.SOUNDS;local x=_G.GetCurrentMapZoneIndex;local y=_G.GetMapPlayerWaypoint;local z=_G.RemovePlayerWaypoint;local A=_G.RemoveRallyPoint;local B=_G.EVENT_ADD_ON_LOADED;local C=_G.ZO_WorldMapPins;function n:New(...)local D=m.New(self)D:Initialize(...)return D end;function n:Initialize(E,F)self.timeframe=E;self.resolution=F;self.count=E*F;self.sumList={}self.lastIndex=self:GetCurrentIndex()for G=1,self.count do self.sumList[G]=0 end end;function n:GetCurrentIndex()return math.floor(self.resolution*u()/1000)%self.count end;function n:Increment()local H=self:GetCurrentIndex()while self.lastIndex~=H do self.lastIndex=(self.lastIndex+1)%self.count;self.sumList[self.lastIndex]=0 end;self.sumList[H]=self.sumList[H]+1 end;function n:GetAverage()local H=self:GetCurrentIndex()local I=0;for G=1,self.count do if G~=H then I=I+self.sumList[G]end end;return math.floor(I/(self.count-1)*self.resolution)end;local J=m:Subclass()function J:New(...)local D=m.New(self)D:Initialize(...)return D end;function J:Initialize()self.average=n:New(k,l)self.size=i;self.generatedTokens=1/h;self.safetyThreshold=j;self.left=self.size;self.lastCheck=u()end;function J:GetTokensLeft()local K=u()local I=self.average:GetAverage()local L=_G.IsUnitInCombat("player")and g or f;local M=I*L;local N=(K-self.lastCheck)/1000;self.left=math.min(self.left+N*self.generatedTokens,self.size)self.lastCheck=K;return self.left end;function J:HasTokensLeft()return self:GetTokensLeft()>self.safetyThreshold end;function J:Take()if self:HasTokensLeft()then self.left=self.left-1;self.average:Increment()return true end;return false end;local O=_G.MAP_PIN_TYPE_PLAYER_WAYPOINT;local P=_G.MAP_PIN_TYPE_PING;local Q=_G.MAP_PIN_TYPE_RALLY_POINT;local R="waypoint"local S="rally"local T="pings"local U=400;local V={[O]=R,[Q]=S}local W,X,Y;local Z={}local _={}b.MAP_PING_NOT_SET=0;b.MAP_PING_NOT_SET_PENDING=1;b.MAP_PING_SET_PENDING=2;b.MAP_PING_SET=3;b.mutePing=b.mutePing or{}b.suppressPing=b.suppressPing or{}b.pingState=b.pingState or{}b.pendingPing=b.pendingPing or{}b.cm=b.cm or _G.ZO_CallbackObject:New()b.bucket=J:New()local a0=b.mapPinManager;local function a1(a2)local a3=_G.GetGroupUnitTagByIndex;local a4=_G.GetGroupIndexByUnitTag;return V[a2]or a3(a4("player"))or""end;local function a5(a2,a6)a6=a6 or a1(a2)return string.format("%d_%s",a2,a6)end;local function a7(a8,a9,a2,a6,aa,ab,ac)local ad=a5(a2,a6)local ae=b.pendingPing[ad]if ae and ae[1]==a9 then b.pendingPing[ad]=nil end;if a9==p then b.cm:FireCallbacks("BeforePingAdded",a2,a6,aa,ab,ac)b.pingState[ad]=b.MAP_PING_SET;a0:RemovePins(T,a2,a6)if not b:IsPingSuppressed(a2,a6)then a0:CreatePin(a2,a6,aa,ab)if ac and not b:IsPingMuted(a2,a6)then v(w.MAP_PING)end end;b.cm:FireCallbacks("AfterPingAdded",a2,a6,aa,ab,ac)elseif a9==q then b.cm:FireCallbacks("BeforePingRemoved",a2,a6,aa,ab,ac)b.pingState[ad]=b.MAP_PING_NOT_SET;a0:RemovePins(T,a2,a6)if ac and not b:IsPingSuppressed(a2,a6)and not b:IsPingMuted(a2,a6)then v(w.MAP_PING_REMOVE)end;b.cm:FireCallbacks("AfterPingRemoved",a2,a6,aa,ab,ac)end end;local function af()c:UnregisterForUpdate(a)for ad,ae in pairs(b.pendingPing)do local a9,a2,aa,ab,ag=unpack(ae)local a6=a1(a2)if x()~=ag then b:SuppressPing(a2,a6)end;a7(0,a9,a2,a6,aa,ab,true)b.pendingPing[ad]=nil;b.mutePing[ad]=0;b.suppressPing[ad]=0 end end;local function ah(ad,...)b.pendingPing[ad]={...}c:UnregisterForUpdate(a)c:RegisterForUpdate(a,U,af)end;local function ai(a2,aj,aa,ab)if a2==P and not _G.IsUnitGrouped("player")then return end;if a2==O or b.bucket:Take()then local ad=a5(a2)b.pingState[ad]=b.MAP_PING_SET_PENDING;ah(ad,p,a2,aa,ab,x())return W(a2,aj,aa,ab)end end;local function ak()if b:IsPingSuppressed(O,R)then return 0,0 end;return Z[O]()end;local function al(a6)if b:IsPingSuppressed(P,a6)then return 0,0 end;return Z[P](a6)end;local function am()if b:IsPingSuppressed(Q,S)then return 0,0 end;return Z[Q]()end;local function an()local ad=a5(O,R)b.pingState[ad]=b.MAP_PING_NOT_SET_PENDING;ah(ad,q,O,0,0,x())return X()end;local function ao()s(P,_G.MAP_TYPE_LOCATION_CENTERED,0,0)end;local function ap()local ad=a5(Q,S)b.pingState[ad]=b.MAP_PING_NOT_SET_PENDING;ah(ad,q,Q,0,0)Y()end;function b:SetMapPing(a2,aj,aa,ab)s(a2,aj,aa,ab)end;function b:RemoveMapPing(a2)if _[a2]then _[a2]()end end;function b:GetMapPing(a2,a6)local aa,ab=0,0;if Z[a2]then aa,ab=Z[a2](a6 or a1(a2))end;return aa,ab end;function b:GetMapPingState(a2,a6)local ad=a5(a2,a6)local aq=b.pingState[ad]if aq==nil then local aa,ab=b:GetMapPing(a2,a6)aq=(aa~=0 or ab~=0)and b.MAP_PING_SET or b.MAP_PING_NOT_SET;b.pingState[ad]=aq end;return b.pingState[ad]end;function b:HasMapPing(a2,a6)local aq=b:GetMapPingState(a2,a6)return aq==b.MAP_PING_SET_PENDING or aq==b.MAP_PING_SET end;function b:RefreshMapPin(a2,a6)if not a0 then d("PinManager not available. Using ZO_WorldMap_UpdateMap instead.")_G.ZO_WorldMap_UpdateMap()return true end;a6=a6 or a1(a2)a0:RemovePins(T,a2,a6)local aa,ab=b:GetMapPing(a2,a6)if b:IsPositionOnMap(aa,ab)then a0:CreatePin(a2,a6,aa,ab)return true end;return false end;function b:IsPositionOnMap(aa,ab)return not(aa<0 or ab<0 or aa>1 or ab>1 or aa==0 and ab==0)end;function b:MutePing(a2,a6)local ad=a5(a2,a6)local ar=b.mutePing[ad]or 0;b.mutePing[ad]=ar+1 end;function b:UnmutePing(a2,a6)local ad=a5(a2,a6)local ar=(b.mutePing[ad]or 0)-1;if ar<0 then ar=0 end;b.mutePing[ad]=ar end;function b:IsPingMuted(a2,a6)local ad=a5(a2,a6)return b.mutePing[ad]and b.mutePing[ad]>0 end;function b:SuppressPing(a2,a6)local ad=a5(a2,a6)local as=b.suppressPing[ad]or 0;b.suppressPing[ad]=as+1 end;function b:UnsuppressPing(a2,a6)local ad=a5(a2,a6)local as=(b.suppressPing[ad]or 0)-1;if as<0 then as=0 end;b.suppressPing[ad]=as end;function b:IsPingSuppressed(a2,a6)local ad=a5(a2,a6)return b.suppressPing[ad]and b.suppressPing[ad]>0 end;local function at()if a0 then return end;local au=C.RefreshCustomPins;function C:RefreshCustomPins()a0=self;b.mapPinManager=self end;_G.ZO_WorldMap_RefreshCustomPinsOfType()C.RefreshCustomPins=au end;function b:RegisterCallback(av,aw)b.cm:RegisterCallback(av,aw)end;function b:UnregisterCallback(av,aw)b.cm:UnregisterCallback(av,aw)end;local function ax()c:UnregisterForEvent(a,B)c:UnregisterForEvent(a,r)s=W;y=Z[O]t=Z[P]o=Z[Q]z=X;A=Y end;local function ay()at()W=s;s=ai;Z[O]=y;Z[P]=t;Z[Q]=o;y=ak;t=al;o=am;X=z;Y=A;z=an;A=ap;_[O]=an;_[P]=ao;_[Q]=ap;c:RegisterForEvent(a,B,function(az,aA)if aA=="ZO_Ingame"then c:UnregisterForEvent(a,B)c:UnregisterForEvent("ZO_WorldMap",r)c:RegisterForEvent(a,r,a7)end end)b.Unload=ax end;if b.Unload then b.Unload()end;ay()