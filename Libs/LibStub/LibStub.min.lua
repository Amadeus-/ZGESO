local a,b="LibStub",4;local c=_G[a]local d=_G.zo_strmatch;local e=string.format;if not c or c.minor<b then c=c or{libs={},minors={}}_G[a]=c;c.minor=b;function c:NewLibrary(f,g)assert(type(f)=="string","Bad argument #2 to `NewLibrary' (string expected)")if type(g)~="number"then g=assert(tonumber(d(g,"%d+%.?%d*")),"Minor version must either be a number or contain a number.")end;local h=self.minors[f]if h and h>=g then return nil end;self.minors[f],self.libs[f]=g,self.libs[f]or{}return self.libs[f],h end;function c:GetLibrary(f,i)if not self.libs[f]and not i then error(e("Cannot find a library instance of %q.",tostring(f)),2)end;return self.libs[f],self.minors[f]end;function c:IterateLibraries()return pairs(self.libs)end;setmetatable(c,{__call=c.GetLibrary})end;c.SILENT=true