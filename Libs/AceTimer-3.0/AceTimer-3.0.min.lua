local a,b="AceTimer-3.0",16;local c,d=_G.LibStub:NewLibrary(a,b)if not c then return end;c.inactiveTimers=c.inactiveTimers or{}c.activeTimers=c.activeTimers or{}local type,unpack,next,error,pairs,tostring,select=type,unpack,next,error,pairs,tostring,select;local e=c.inactiveTimers;local f=c.activeTimers;local function g(self)local h=self.id;if type(self.func)=="string"then self.object[self.func](self.object,unpack(self.args,1,self.argsCount))else self.func(unpack(self.args,1,self.argsCount))end;if not self.looping and h==self.id then f[self.id]=nil;self.args=nil;e[self]=true end end;local function i(self,j,k,l,...)local m=next(e)if m then e[m]=nil else local n=_G.CreateSimpleAnimation()m=n:GetTimeline()n:SetHandler("OnStop",function(o)g(m)end)end;if l<0.01 then l=0.01 end;m.object=self;m.func=k;m.looping=j;m.args={...}m.argsCount=select("#",...)local n=m:GetAnimation()local p,q,r=_G.ANIMATION_PLAYBACK_LOOP,_G.LOOP_INDEFINITELY,_G.ANIMATION_PLAYBACK_ONE_SHOT;if j then m:SetPlaybackType(p,q)else m:SetPlaybackType(r)end;n:SetDuration(l)local h=tostring(m.args)m.id=h;f[h]=m;m:PlayFromStart()return h end;function c:ScheduleTimer(k,l,...)if not k or not l then error(a..": ScheduleTimer(callback, delay, args...): 'callback' and 'delay' must have set values.",2)end;if type(k)=="string"then if type(self)~="table"then error(a..": ScheduleTimer(callback, delay, args...): 'self' - must be a table.",2)elseif not self[k]then error(a..": ScheduleTimer(callback, delay, args...): Tried to register '"..k.."' as the callback, but it doesn't exist in the module.",2)end end;l=l*1000;return i(self,nil,k,l,...)end;function c:ScheduleRepeatingTimer(k,l,...)if not k or not l then error(a..": ScheduleRepeatingTimer(callback, delay, args...): 'callback' and 'delay' must have set values.",2)end;if type(k)=="string"then if type(self)~="table"then error(a..": ScheduleRepeatingTimer(callback, delay, args...): 'self' - must be a table.",2)elseif not self[k]then error(a..": ScheduleRepeatingTimer(callback, delay, args...): Tried to register '"..k.."' as the callback, but it doesn't exist in the module.",2)end end;l=l*1000;return i(self,true,k,l,...)end;function c:CancelTimer(h)local m=f[h]if not m then return false end;m:Stop()f[h]=nil;m.args=nil;e[m]=true;return true end;function c:CancelAllTimers()for s,t in pairs(f)do if t.object==self then c.CancelTimer(self,s)end end end;function c:TimeLeft(h)local m=f[h]if not m then return 0 end;return m:GetDuration()*m:GetProgress()/1000 end;if d and d<10 then for u,v in pairs(c.selfs)do for w,m in pairs(v)do if type(m)=="table"and m.callback then local h;if m.delay then h=c.ScheduleRepeatingTimer(m.object,m.callback,m.delay,m.arg)else h=c.ScheduleTimer(m.object,m.callback,m.when-_G.GetTime(),m.arg)end;local x=f[h]f[h]=nil;f[w]=x;x.id=w end end end;c.selfs=nil;c.hash=nil;c.debug=nil elseif d and d<13 then for w,h in pairs(c.hashCompatTable)do local x=f[h]if x then f[h]=nil;f[w]=x;x.id=w end end;c.hashCompatTable=nil end;for m in pairs(e)do m:SetScript("OnStop",g)end;for y,m in pairs(f)do m:SetScript("OnStop",g)end;c.embeds=c.embeds or{}local z={"ScheduleTimer","ScheduleRepeatingTimer","CancelTimer","CancelAllTimers","TimeLeft"}function c:Embed(A)c.embeds[A]=true;for y,t in pairs(z)do A[t]=c[t]end;return A end;function c:OnEmbedDisable(A)A:CancelAllTimers()end;for B in pairs(c.embeds)do c:Embed(B)end